generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SequelizeMeta {
  name String @id @db.VarChar(255)
}

model Users {
  id        String   @id @db.Uuid
  password  String   @db.VarChar(255)
  username  String   @unique @db.VarChar(255)
  email     String   @unique @db.VarChar(255)
  createdAt   DateTime?    @default(now())
  updatedAt   DateTime?   @updatedAt
}

model Categories {
  name Category   @unique
  products Products[]
}

enum Category {
  OIL
  FLORAL_WATER
  SOAP
  CREAM
}

enum ProductType {
  SCRUBS_AND_MASKS
  NATURAL_DEODORANTS
  HAIR_OILD_AND_SERUMS
  SOLID_SHAMPOOS_AND_HAIR_SOAPS
  EAU_DE_TOILETE
}

enum Tag {
  VEGAN_COSMETICS
  ORGANIC_COSMETICS
  HANDMADE_COSMETICS
  SUMMER_ESSENTIALS
  GIFTS
}

model ProductTypes {
  name ProductType @unique
  products Products[]
}

model Products {
  id        String   @id @db.Uuid
  name String
  price String
  priceInt Int @default(0)
  image String
  category Categories @relation(fields:[categoryName], references: [name])
  categoryName Category
  productType ProductTypes @relation(fields:[productTypeName], references: [name])
  productTypeName ProductType @default(SCRUBS_AND_MASKS)
  tags TagsOnProducts[]
}

model Tags {
  name        Tag   @id
  products TagsOnProducts[]
}

model TagsOnProducts {
  tag       Tags     @relation(fields: [tagId], references: [name])
  tagId     Tag // relation scalar field (used in the `@relation` attribute above)
  product   Products @relation(fields: [productId], references: [id])
  productId String @db.Uuid
  createdAt DateTime @default(now())

  @@id([tagId, productId])
}

